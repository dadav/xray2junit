---
name: Build and release Jobs

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
  schedule:
    # daily builds at 12am
    - cron: 0 12 * * *

env:
  CARGO_TERM_COLOR: always

jobs:
  style:
    name: Stylecheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: Check the code
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
  build:
    name: Build for different targets
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - name: x86_64-musl
            target: x86_64-unknown-linux-musl
          - name: x86_64-gnu
            target: x86_64-unknown-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.config.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.config.target }}

      - name: Create release tarballs
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          mkdir -p artifacts
          tar czf artifacts/xray2junit-${{ matrix.config.name }}.tar.gz \
            -C target/${{ matrix.config.target }}/release/ xray2junit

      - run: find artifacts
        if: startsWith(github.ref, 'refs/tags/')

      - name: Upload builds
        uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: artifacts
          path: artifacts

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    name: Deploy to github
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install git-chglog
        run: GOBIN=/usr/local/bin/ go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest
      - name: Generate Changelog
        run: git-chglog ${{ github.ref_name }} -o ${{ github.workspace }}-CHANGELOG.txt
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: artifacts
      - run: find artifacts
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.tar.gz
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          draft: true
